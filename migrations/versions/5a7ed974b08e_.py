"""empty message

Revision ID: 5a7ed974b08e
Revises: 
Create Date: 2023-06-26 12:59:30.124336

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '5a7ed974b08e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('logbook_abnormal_values')
    op.drop_table('aabbccddeeff7778route')
    op.drop_table('restaurant')
    op.drop_table('error_messages')
    op.drop_table('voltage-robot')
    with op.batch_alter_table('aabbccddeeff7778', schema=None) as batch_op:
        batch_op.alter_column('datetime',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=False)
        batch_op.alter_column('temperature',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.Integer(),
               nullable=True)
        batch_op.drop_column('checked')

    with op.batch_alter_table('emailaddress', schema=None) as batch_op:
        batch_op.alter_column('adress',
               existing_type=sa.CHAR(length=255),
               type_=sa.String(),
               existing_nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('emailaddress', schema=None) as batch_op:
        batch_op.alter_column('adress',
               existing_type=sa.String(),
               type_=sa.CHAR(length=255),
               existing_nullable=False)

    with op.batch_alter_table('aabbccddeeff7778', schema=None) as batch_op:
        batch_op.add_column(sa.Column('checked', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.alter_column('temperature',
               existing_type=sa.Integer(),
               type_=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
        batch_op.alter_column('datetime',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=False)

    op.create_table('voltage-robot',
    sa.Column('voltage', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('datetime', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('datetime', name='voltage-robot_pkey')
    )
    op.create_table('error_messages',
    sa.Column('datetime', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('value', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('message', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('restaurant',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('street_address', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='restaurant_pkey')
    )
    op.create_table('aabbccddeeff7778route',
    sa.Column('datetime', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('route', postgresql.ARRAY(sa.INTEGER()), autoincrement=False, nullable=False)
    )
    op.create_table('logbook_abnormal_values',
    sa.Column('datetime', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('value', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('message', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('checked', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True)
    )
    # ### end Alembic commands ###
